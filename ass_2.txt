1.Arrays in javascript:
-----------------------
In JavaScript, array is a single variable that is used to store different elements.
It is often used when we want to store list of elements and access them by a single variable. 
Unlike most languages where array is a reference to the multiple variable, 
in JavaScript array is a single variable that stores multiple elements.
Declare:
var House = [ ]; // method 1
var House = new array(); // method 2
Initializing while declaring 
 Creates an array having elements 10, 20, 30, 40, 50 
var house = new Array(10, 20, 30, 40, 50); 
  
Creates an array of 5 undefined elements 
var house1 = new Array(5); 
  
Creates an array with element 1BHK 
var home = new Array("!BHK")

Initializing while declaring 
var house = ["1BHK", "2BHK", "3BHK", "4BHK"];

2.strings:
-----------
The String object lets you work with a series of characters; 
it wraps Javascript's string primitive data type with a number of helper methods.
JavaScript automatically converts between string primitives and String objects.
syntax:
var val = new String(string);

String Propertie:
----------------------------
Here is a list of the properties of String object and their description.

Sr.No.	Property & Description
1	constructor
Returns a reference to the String function that created the object.

2	length
Returns the length of the string.

3	prototype
The prototype property allows you to add properties and methods to an object.

In the following sections, we will have a few examples to demonstrate the usage of String properties.
-----------------------------------------------------------------------------------------------------------------------------------
String Methods:
--------------
Here is a list of the methods available in String object along with their description.

Sr.No.	Method & Description
1	charAt()
Returns the character at the specified index.

2	charCodeAt()
Returns a number indicating the Unicode value of the character at the given index.

3	concat()
Combines the text of two strings and returns a new string.

4	indexOf()
Returns the index within the calling String object of the first occurrence of the specified value, or -1 if not found.

5	lastIndexOf()
Returns the index within the calling String object of the last occurrence of the specified value, or -1 if not found.

6	localeCompare()
Returns a number indicating whether a reference string comes before or after or is the same as the given string in sort order.

7	match()
Used to match a regular expression against a string.

8	replace()
Used to find a match between a regular expression and a string, and to replace the matched substring with a new substring.

9	search()
Executes the search for a match between a regular expression and a specified string.

10	slice()
Extracts a section of a string and returns a new string.

11	split()
Splits a String object into an array of strings by separating the string into substrings.

12	substr()
Returns the characters in a string beginning at the specified location through the specified number of characters.

13	substring()
Returns the characters in a string between two indexes into the string.

14	toLocaleLowerCase()
The characters within a string are converted to lower case while respecting the current locale.

15	toLocaleUpperCase()
The characters within a string are converted to upper case while respecting the current locale.

16	toLowerCase()
Returns the calling string value converted to lower case.

17	toString()
Returns a string representing the specified object.

18	toUpperCase()
Returns the calling string value converted to uppercase.

19	valueOf()
Returns the primitive value of the specified object.